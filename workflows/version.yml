# Copyright 2019 Ludan Stoeckl√©
# SPDX-License-Identifier: Apache-2.0
name: complete with packaging

snippets:
  downloadbuild: &downloadbuild
    - 
      name: download build
      uses: actions/download-artifact@v2
      with:
        name: build-${{ env.GITHUB_REF_SLUG }}
        path: ./packages
  checkout: &checkout
    - uses: actions/checkout@v2
  dockerlogin: &dockerlogin
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}    
  qemu: &qemu
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
  buildx: &buildx
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

on:
  push:
    branches:
      - 'v*.*.*'

env:
  ROSAENLG_VERSION: 2.0.0

jobs:

  build_test:
    name: Build, test and save build artifacts
    runs-on: ubuntu-latest
    steps:
    -
      <<: *checkout
    -
      <<: *shortvariables
    -
      <<: *nodeversion
    -
      <<: *cachenode
    -
      <<: *cacheperfmon
    - 
      name: check environment versions
      run: |
        npm -v
        node --version
    - name: install environment
      run: |
        npm install -g pegjs
        npm install -g lerna
        yarn install
        rm -f packages/rosaenlg/dist/rollup/*.js
    - name: build
      run: |
        lerna run build
        # mkdir packages/rosaenlg/dist
        # mkdir packages/rosaenlg/dist/rollup
        # echo 'bla' > packages/rosaenlg/dist/rollup/test.txt
    - name: test
      run: |
        lerna run test
        # mkdir packages/rosaenlg/coverage
        # echo 'bla' > packages/rosaenlg/coverage/cov.txt
    - name: save build
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ env.GITHUB_REF_SLUG }}
        path: |
          packages/*/resources_pub
          packages/*/dist
          packages/*/coverage
          packages/*/lib
          packages/*/.serverless
        retention-days: 1

  sonarcloud:
    name: SonarCloud
    needs: [build_test]
    runs-on: ubuntu-latest
    steps:
    -
      <<: *shortvariables
    -
      <<: *checkout
    -
      <<: *downloadbuild
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  publish_on_npm:
    name: publish on npm
    needs: [sonarcloud]
    runs-on: ubuntu-latest
    steps:
    -
      <<: *shortvariables
    -
      <<: *checkout
    -
      <<: *downloadbuild
    - name: Use proper version of node.js, and setup registry
      uses: actions/setup-node@v1
      with:
        always-auth: true
        node-version: 12.x
        registry-url: https://registry.npmjs.org
    - name: install environment
      run: |
        npm install -g lerna
        git config core.filemode false # because rosaenlg-cli/index.js is now executable
    - name: connect to npm
      run: |
        npm config set email=ludan.stoeckle@rosaenlg.org
        npm config list
        npm whoami
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: publish packages
      run: |
        pwd
        ls -l
        ls -l packages/rosaenlg/dist/rollup # test purposes
        lerna publish from-package --yes
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish_browser_ide_and_swaggers:
    name: publish browser IDE and swaggers
    needs: [publish_on_npm]
    runs-on: ubuntu-latest
    steps:
    -
      <<: *shortvariables
    -
      <<: *checkout
    -
      <<: *downloadbuild
    -
      <<: *nodeversion
    -
      <<: *cachenode
    - name: install environment
      run: yarn install
    - name: publish browser IDE
      run: node node_modules/gulp/bin/gulp.js --gulpfile packages/browser-ide-demo/gulpfile.js s3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: publish swaggers
      run: |
        node node_modules/gulp/bin/gulp.js --gulpfile packages/rosaenlg-node-server/gulpfile.js s3
        node node_modules/gulp/bin/gulp.js --gulpfile packages/rosaenlg-lambda/gulpfile.js s3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  docker_cli:
    name: Docker for CLI
    needs: [publish_on_npm]
    runs-on: ubuntu-latest
    steps:
    -
      <<: *shortvariables
    -
      <<: *checkout
    -
      <<: *downloadbuild
    -
      <<: *qemu
    -
      <<: *buildx
    -
      <<: *dockerlogin
    -
      name: Build test image
      uses: docker/build-push-action@v2.0.1
      with:
        context: packages/rosaenlg-cli/docker/
        file: packages/rosaenlg-cli/docker/Dockerfile
        load: true
        tags: ${{ env.DOCKER_TEST_TAG }}
        build-args: |
          ROSAENLG_VERSION=${{ env.ROSAENLG_VERSION }}
      env:
        DOCKER_TEST_TAG: rosaenlg/cli:test_${{ env.GITHUB_REF_SLUG }}
    -
      name: Test image
      run: |
        cd packages/rosaenlg-cli/docker/
        chmod +x ./test.sh
        /bin/sh ./test.sh $DOCKER_TEST_TAG
      env:
        DOCKER_TEST_TAG: rosaenlg/cli:test_${{ env.GITHUB_REF_SLUG }}
    -
      name: Build and push final image
      uses: docker/build-push-action@v2.0.1
      with:
        context: packages/rosaenlg-cli/docker/
        file: packages/rosaenlg-cli/docker/Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_FINAL_TAG }}
          rosaenlg/cli:latest
        build-args: |
          ROSAENLG_VERSION=${{ env.ROSAENLG_VERSION }}
      env:
        DOCKER_FINAL_TAG: rosaenlg/cli:${{ env.ROSAENLG_VERSION }}


  docker_server:
    name: Docker Server
    needs: [publish_on_npm]
    runs-on: ubuntu-latest
    steps:
    -
      <<: *shortvariables
    -
      <<: *checkout
    -
      <<: *downloadbuild
    -
      <<: *qemu
    -
      <<: *buildx
    -
      <<: *dockerlogin
    -
      name: Build test image
      uses: docker/build-push-action@v2.0.1
      with:
        context: packages/rosaenlg-node-server/docker/
        file: packages/rosaenlg-node-server/docker/Dockerfile
        load: true
        tags: ${{ env.DOCKER_TEST_TAG }}
        build-args: |
          ROSAENLG_VERSION=${{ env.ROSAENLG_VERSION }}
      env:
        DOCKER_TEST_TAG: rosaenlg/server:test_${{ env.GITHUB_REF_SLUG }}
    -
      name: Test image
      run: |
        echo "checking curl..."
        curl --version
        cd packages/rosaenlg-node-server/docker/
        echo "starting docker container..."
        docker run -d -p 5000:5000 $DOCKER_TEST_TAG
        echo "sleeping..."
        sleep 20
        echo "list processes"
        ps -ef
        chmod +x ./test.sh
        echo "run test"
        /bin/sh ./test.sh
      env:
        DOCKER_TEST_TAG: rosaenlg/server:test_${{ env.GITHUB_REF_SLUG }}
    -
      name: Build and push final image
      uses: docker/build-push-action@v2.0.1
      with:
        context: packages/rosaenlg-node-server/docker/
        file: packages/rosaenlg-node-server/docker/Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_FINAL_TAG }}
          rosaenlg/server:latest
        build-args: |
          ROSAENLG_VERSION=${{ env.ROSAENLG_VERSION }}
      env:
        DOCKER_FINAL_TAG: rosaenlg/server:${{ env.ROSAENLG_VERSION }}
